{"name": "test_health_check_exit_page", "status": "broken", "statusDetails": {"message": "poco.exceptions.PocoNoSuchNodeException: Cannot find any visible node by query UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"", "trace": "proxy = UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"\nargs = (), kwargs = {}\n\n    @wraps(func)\n    def wrapped(proxy, *args, **kwargs):\n        try:\n            return func(proxy, *args, **kwargs)\n        except PocoNoSuchNodeException as e:\n            try:\n>               proxy.wait_for_appearance(timeout=proxy.poco._pre_action_wait_for_appearance)\n\nvenv\\lib\\site-packages\\poco\\proxy.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"\ntimeout = 6\n\n    def wait_for_appearance(self, timeout=120):\n        \"\"\"\n        Block and wait until the UI element **appears** within the given timeout. When timeout, the\n        :py:class:`PocoTargetTimeout <poco.exceptions.PocoTargetTimeout>` is raised.\n    \n        Args:\n            timeout: maximum waiting time in seconds\n    \n        Raises:\n            PocoTargetTimeout: when timeout\n        \"\"\"\n    \n        start = time.time()\n        while not self.exists():\n            self.poco.sleep_for_polling_interval()\n            if time.time() - start > timeout:\n>               raise PocoTargetTimeout('appearance', self)\nE               poco.exceptions.PocoTargetTimeout: Waiting timeout for appearance of \"UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"\"\n\nvenv\\lib\\site-packages\\poco\\proxy.py:679: PocoTargetTimeout\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_check_exit_page.TestCheck object at 0x000002397F7B6F28>\n\n    @allure.feature('健康检测-检测中退出页面模块')\n    @allure.story('健康检测之检测中点击左上角的返回按钮显示是否符合设计要求')\n    def test_health_check_exit_page(self):\n        touch(Template(r\"case_images/healthRisk_images/tpl1689667365289.png\", record_pos=(-0.463, 0.234), resolution=(1920, 1200)), duration=2.0)\n>       poco(\"com.senseauto.healthdetect:id/bt_health_detect\").click()\n\ntest_cases\\test_check_exit_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\poco\\proxy.py:29: in wrapped\n    raise e\nvenv\\lib\\site-packages\\poco\\proxy.py:23: in wrapped\n    return func(proxy, *args, **kwargs)\nvenv\\lib\\site-packages\\poco\\proxy.py:332: in click\n    pos_in_percentage = self.get_position(focus)\nvenv\\lib\\site-packages\\poco\\proxy.py:72: in wrapped\n    return func(proxy, *args, **kwargs)\nvenv\\lib\\site-packages\\poco\\proxy.py:613: in get_position\n    x, y = map(float, self.attr('pos'))\nvenv\\lib\\site-packages\\poco\\proxy.py:39: in wrapped\n    return func(self, *args, **kwargs)\nvenv\\lib\\site-packages\\poco\\proxy.py:734: in attr\n    nodes = self._do_query(multiple=False)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"\nmultiple = False, refresh = False\n\n    def _do_query(self, multiple=True, refresh=False):\n        if not self._evaluated or refresh:\n            self._nodes = self.poco.agent.hierarchy.select(self.query, multiple)\n            if len(self._nodes) == 0:\n                # 找不到节点时，将当前节点状态重置，强制下一次访问时重新查询一次节点信息\n                self.invalidate()\n>               raise PocoNoSuchNodeException(self)\nE               poco.exceptions.PocoNoSuchNodeException: Cannot find any visible node by query UIObjectProxy of \"com.senseauto.healthdetect:id/bt_health_detect\"\n\nvenv\\lib\\site-packages\\poco\\proxy.py:888: PocoNoSuchNodeException"}, "attachments": [{"name": "log", "source": "645b3017-fc28-4eff-9066-15f548478df3-attachment.txt", "type": "text/plain"}], "start": 1692358460165, "stop": 1692358475428, "uuid": "4c6d4234-7332-4837-9fd6-a0c5ed7f81fb", "historyId": "f49ffa038298c7ea12bbe38689648cc2", "testCaseId": "f49ffa038298c7ea12bbe38689648cc2", "fullName": "test_cases.test_check_exit_page.TestCheck#test_health_check_exit_page", "labels": [{"name": "story", "value": "健康检测之检测中点击左上角的返回按钮显示是否符合设计要求"}, {"name": "feature", "value": "健康检测-检测中退出页面模块"}, {"name": "feature", "value": "健康检测"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_check_exit_page"}, {"name": "subSuite", "value": "TestCheck"}, {"name": "host", "value": "CN0014010795W"}, {"name": "thread", "value": "22176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_check_exit_page"}]}